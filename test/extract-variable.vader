# Test case
Before (setup mapping):
  let g:jsrf_map_leader = '\jsr'
  source after/ftplugin/javascript.vim
  nnoremap <buffer> \rv :ExtractVariableAtCursor foo<cr>
  vnoremap <buffer> \rv :<c-u>ExtractVariableInRange foo<cr>

Given javascript (function with expression in arguments):
  doSomethingSpecial(a, b + c)

Do (run extract variable on + sign):
  f+\rv

Expect javascript (variable extracted):
  const foo = b + c
  doSomethingSpecial(a, foo)

Given javascript (multiline arguments):
  doSomethingSpecial({
    x: 'x',
  })

Do (run extract variable on x):
  jfx\rv

Expect javascript (variable extracted):
  const foo = {
    x: 'x',
  }
  doSomethingSpecial(foo)

Given javascript (in function body):
  function bar() {
    doSomethingSpecial(a, b + c)
  }

Do (run extract variable on x):
  jf+\rv

Expect javascript (variable extracted):
  function bar() {
    const foo = b + c
    doSomethingSpecial(a, foo)
  }

Given javascript (extract object calling function):
  function f () {
    return abc(123).toString()
  }

Do (extract variable with function call selected):
  jfavt.\rv

Expect javascript (variable extracted):
  function f () {
    const foo = abc(123)
    return foo.toString()
  }

Given javascript (method call):
  function f () {
    return abc.def(123).toString()
  }

Do (move cursor to method):
  jfd\rv

Expect javascript (object and method extracted to variable):
  function f () {
    const foo = abc.def
    return foo(123).toString()
  }

Given javascript (expression in async function):
  async function f () {
    await doit(bar + baz)
  }

Do (move cursor to operator in argument):
  jf+\rv

Expect javascript (object and method extracted to variable):
  async function f () {
    const foo = bar + baz
    await doit(foo)
  }

Execute (extract variable gives error):
  AssertThrows normal \rv
  Assert g:vader_exception =~ "Cannot extract variable from this point"

Given javascript (invalid syntax):
  invalid syntax

Execute (extract variable gives error):
  AssertThrows normal \rv
  Assert g:vader_exception =~ "Cannot extract variable from this point"

Expect javascript (nothing changed):
  invalid syntax
